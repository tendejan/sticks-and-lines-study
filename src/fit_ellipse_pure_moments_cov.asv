function [centroid_x, centroid_y, axis_major_length, axis_minor_length, axis_ratio_minor_to_major, orientation_radians] = fit_ellipse_pure_moments_cov(binary_image)
    assert(islogical(binary_image), 'fit_ellipse:TypeError', 'input image must be type of Logical');

    [rows, cols] = find(binary_image);
    %fit an ellipse using the 2nd moments of the image's convex hull
    if ~isempty(rows)
        % Calculate centroid
        x_center = mean(cols);
        y_center = mean(rows);
        
        mu20 = sum((cols - x_center).^2);
        mu02 = sum((rows - y_center).^2);
        mu11 = sum((cols - x_center) .* (rows - y_center));
        
        % Form the covariance matrix (normalized by number of points)
        n = length(cols);
        cov_matrix = [mu20/n, mu11/n; mu11/n, mu02/n];
        
        % Get eigenvalues and eigenvectors
        [eigenvecs, eigenvals] = eig(cov_matrix);
        eigenvals = diag(eigenvals);
        
        % Sort by eigenvalue magnitude
        [eigenvals, idx] = sort(eigenvals, 'descend');
        eigenvecs = eigenvecs(:, idx);
        
        % Ellipse parameters
        major_axis = 2 * sqrt(eigenvals(1));  % major axis
        minor_axis = 2 * sqrt(eigenvals(2));
        
        % Calculate orientation (in degrees)
        orientation2 = 0.5 * atan2(2*mu11, mu20 - mu02) * 180/pi;
            
        axis_ratio_minor_to_major = minor_axis/major_axis;
        axis_major_length = major_axis;
        axis_minor_length = minor_axis;

        centroid_x = x_center;
        centroid_y = y_center;
        orientation_radians = deg2rad(orientation2);
    end
end